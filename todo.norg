# Game Boy Opcode Implementation Order.norg

* Phase 1: Bootstrapping – Core Flow & Registers
  - (x) NOP (0x00)
  - (x) JP addr (0xC3)
  - (x) LD r, n (e.g. 0x06, 0x0E)
  - (x) LD r1, r2 (register-to-register loads)
  - ( ) LD A, (nn) / LD (nn), A
  	- ( ) Fetch word
  	- ( ) Construct an imm16 from a fetched word
  - ( ) INC r / DEC r
  - ( ) LD HL, SP+n / LD SP, HL
  - ( ) Test: Run a ROM with register loads and an infinite loop

* Phase 2: Arithmetic & Logic
  - ( ) ADD, SUB, AND, OR, XOR, CP
  - ( ) INC/DEC (HL)
  - ( ) Flag behavior (Z, N, H, C)
  - ( ) DAA (optional, can defer)

* Phase 3: Program Control
  - ( ) JP cc, addr (Conditional jumps)
  - ( ) JR (Relative jump)
  - ( ) CALL addr / RET
  - ( ) CALL cc / RET cc (Conditional call/return)
  - ( ) RST xx (Interrupt-style CALLs)

* Phase 4: Stack Ops
  - ( ) PUSH/POP (AF, BC, DE, HL)
  - ( ) LD SP, HL
  - ( ) LD (SP), r / LD r, (SP)

* Phase 5: Extended (CB-Prefix) Instructions
  - ( ) RLCA, RLA, RRCA, RRA
  - ( ) CB-prefixed:
    - ( ) RLC, RRC, RL, RR
    - ( ) SLA, SRA, SRL
    - ( ) BIT, SET, RES

* Phase 6: Memory Ops & Special Instructions
  - ( ) LD (C), A / LD A, (C)
  - ( ) LD (a8), A / LD A, (a8)
  - ( ) LDH instructions
  - ( ) HALT / STOP / DI / EI
  - ( ) RETI
  - ( ) CPL, SCF, CCF

* Phase 7: Rare or Esoteric Ones
  - ( ) Undocumented opcodes (optional)
  - ( ) HALT bug
  - ( ) Interrupt timing quirks

* Bonus Tip
  - ( ) Use test ROMs:
    - ( ) Blargg’s CPU instruction tests
    - ( ) GB test ROMs from gbdev.io
    - ( ) Mooneye-test for edge cases

